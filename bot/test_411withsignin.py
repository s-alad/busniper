# Generated by Selenium IDE
import os

from dotenv import load_dotenv
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By

class Test411withsignin():
    load_dotenv()
    username = os.getenv("USERNAME")
    password = os.getenv("PASSWORD")

    def setup_method(self, method):
        # keep the window open after test is done for debugging.
        options = Options()
        options.add_experimental_option("detach", True)
        self.driver = webdriver.Chrome(options=options)
        self.vars = {}

    def teardown_method(self, method):
        # keep the window open after test is done for debugging.
        # self.driver.quit()
        pass

    def test_411withsignin(self):
        # Test name: 411-with-signin
        # Step # | name | target | value
        # 1 | open | https://student.bu.edu/MyBU/s/ |
        self.driver.get("https://student.bu.edu/MyBU/s/")
        # 2 | setWindowSize | 1440x819 |
        self.driver.set_window_size(1440, 819)

        # step 3 kinda useless lol
        # 3 | click | css=.comm-tile-menu__item-title-underline
        # self.driver.find_element(By.CSS_SELECTOR, ".comm-tile-menu__item-title-underline").click()
        # 4 | type | id=j_username | username
        self.driver.find_element(By.ID, "j_username").send_keys(self.username)
        # 5 | type | id=j_password | password
        self.driver.find_element(By.ID, "j_password").send_keys(self.password)
        # 6 | click | name=_eventId_proceed |
        self.driver.find_element(By.NAME, "_eventId_proceed").click()
        # 7 | click | css=tr:nth-child(18) a:nth-child(2) |
        self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(18) a:nth-child(2)").click()
        # 8 | click | linkText=Register for Class |
        self.driver.find_element(By.LINK_TEXT, "Register for Class").click()
        # 9 | click | name=College |
        self.driver.find_element(By.NAME, "College").click()
        # 10 | select | name=College | label=CAS
        dropdown = self.driver.find_element(By.NAME, "College")
        dropdown.find_element(By.XPATH, "//option[. = 'CAS']").click()
        # 11 | type | name=Dept | cs
        self.driver.find_element(By.NAME, "Dept").send_keys("cs")
        # 12 | type | name=Course | 411
        self.driver.find_element(By.NAME, "Course").send_keys("411")
        # 13 | click | css=td:nth-child(6) > input |
        self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(6) > input").click()
